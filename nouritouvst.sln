#include <iostream>
#include <iomanip>
#include <string>
#include <cmath>
#include <algorithm>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <set>
#define endl '\n' 
#define ll long long 
#define nouritou	ios_base::sync_with_stdio(false), cout.tie(NULL), cin.tie(NULL);
using namespace std;
class patients 
{
private:
    map<int, deque<pair<string, string>>>spec; 
public:
    //Set Patient
    void SetPatient(int specialization, string name, bool status) 
    {
        if (spec[specialization].size() == 5) 
            cout << "Sorry, We can't add more patients for this specializtion.\n";
        else 
        {
            if (status)
                spec[specialization].push_front({ name,"urgent" });
            else
                spec[specialization].push_back({ name,"regular" });
        }
    
    }
    //Print
    void print() 
    {
        for (auto it : spec) 
        {
            if (!it.second.size()) continue;
            cout << 
                "*******************\nThere are " << it.second.size() << 
                " patients in specialization " << it.first << endl;
            int sz = it.second.size();
            for (int i = 0; i < sz; i++) cout << it.second[i].first << " " << it.second[i].second << endl;
            cout << endl;
        }
    }
    //Doctor & patients
    void Doctor(int specializtion) 
    {
        if (!spec[specializtion].size()) cout << "No patients at the moment, Get rest, Dr.\n";
        else 
        {
            cout << spec[specializtion][0].first << ", please, go with the doctor.\n";
            spec[specializtion].pop_front();
        }
    }
};
int main()
{
    nouritou
        int choice = 4;
    patients obj;
        do
        {
            cout << "Enter your choice:\n1) Add a new patient.\n2) Print all patients.\n3) Get next patient.\n4) Exit.\n";
             cin >> choice;
             if (choice == 1) 
             {
                 cout << "Enter specialization, name, status.\n";
                 int specialization; string name; bool status;
                 cin >> specialization >> name >> status;
                 obj.SetPatient(specialization, name, status);
             
             }
             else if (choice == 2) 
             {
                 obj.print(); 
             }
             else if (choice == 3) 
             {
                 int specialization;
                 cout << "Enter specializtion.\n";
                 cin >> specialization;
                 obj.Doctor(specialization);
             }
        } while (choice != 4);
        
    return 0;
}
